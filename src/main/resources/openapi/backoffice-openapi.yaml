openapi: 3.1.0
info:
  title: Smarbar Backoffice AP
  description: Smarbar Backoffice AP
  version: 1.0.0
paths:
  /categories:
    get:
      tags:
        - Categories
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type:
                  - array
                items:
                  $ref: "#/components/schemas/categoryRo"
    post:
      tags:
        - Categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/categoryRo"
      responses:
        201:
          description: Success
          $ref: "#/components/responses/201"
  /categories/{categoryId}:
    parameters:
      - name: categoryId
        schema:
          type: string
        in: path
    put:
      tags:
        - Categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/categoryRo"
      responses:
        200:
          description: Entity successfully updated
    delete:
      tags:
        - Categories
      responses:
        200:
          description: Entity successfully deleted
    get:
      tags:
        - Categories
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/categoryRo"
  /items:
    get:
      tags:
        - Items
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/itemRo"
    post:
      tags:
        - Items
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/itemRo"
      responses:
        201:
          $ref: "#/components/responses/201"
  /items/{itemId}:
    parameters:
      - name: itemId
        schema:
          type: string
        in: path
    put:
      tags:
        - Items
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/itemRo"
      responses:
        200:
          description: Entity successfully updated
    delete:
      tags:
        - Items
      responses:
        200:
          description: Entity successfully deleted
    get:
      tags:
        - Items
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/itemRo"
  /tables:
    get:
      tags:
        - Tables
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/tableRo"
    post:
      tags:
        - Tables
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tableRo"
      responses:
        201:
          $ref: "#/components/responses/201"
  /tables/{tableId}:
    parameters:
      - name: tableId
        schema:
          type: string
        in: path
    put:
      tags:
        - Tables
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tableRo"
      responses:
        200:
          description: Entity successfully updated
    delete:
      tags:
        - Tables
      responses:
        200:
          description: Entity successfully deleted
    get:
      tags:
        - Tables
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tableRo"
components:
  schemas:
    categoryRo:
      required:
        - name
        - description
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    itemRo:
      type: object
      required:
        - name
        - price
        - description
        - picture
      properties:
        name:
          type: string
        price:
          type: number
        description:
          type: string
        picture:
          type: string
    tableRo:
      type: object
      required:
        - name
        - seatCount
        - active
      properties:
        name:
          type: string
        seatCount:
          type: integer
        active:
          type: boolean
  responses:
    201:
      description: Entity successfully created
      headers:
        Location:
          description: Entity successfully created